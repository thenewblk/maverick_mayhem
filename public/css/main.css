/**
 * Color variables
 */
/**
 * Typography
 */
/**
 * RWD Breakpoints for layout changes
 */
/**
 * Susy grid setup
 */
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

*, *:before, *:after {
  /* Chrome 9-, Safari 5-, iOS 4.2-, Android 3-, Blackberry 7- */
  -webkit-box-sizing: border-box;
  /* Firefox (desktop or Android) 28- */
  -moz-box-sizing: border-box;
  /* Firefox 29+, IE 8+, Chrome 10+, Safari 5.1+, Opera 9.5+, iOS 5+, Opera Mini Anything, Blackberry 10+, Android 4+ */
  box-sizing: border-box; }

img, media {
  display: block;
  max-width: 100%;
  height: auto;
  vertical-align: top; }

nav ul {
  list-style: none; }

html {
  background-color: #2A2A2A; }

.container {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

.ticket-listing {
  display: none; }

/**
 * Base typography
 */
html {
  font-family: 'museo-sans', Helvetica, Arial, sans-serif;
  font-weight: 500;
  font-size: 80%;
  line-height: 1.5; }
  @media (min-width: 768px) {
    html {
      font-size: 90%; } }
  @media (min-width: 960px) {
    html {
      font-size: 100%; } }

/**
 * Links
 */
a {
  color: #fff; }
  a:hover {
    text-decoration: none; }

/**
 * Paragraphs
 */
p {
  font-size: 1em;
  margin: 0 0 2em; }

/**
 * Headings
 */
h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5 {
  margin-top: 0;
  margin-bottom: 1em;
  font-family: 'museo-slab', 'museo-sans', Helvetica, Arial, sans-serif;
  font-weight: 1000; }

.banner {
  padding: 40px 0;
  background-color: #191919; }

.page-headline {
  padding-left: 30px;
  margin: 0;
  font-size: 2.25em;
  line-height: 1;
  text-transform: uppercase;
  color: #fff; }

.btn {
  display: block;
  text-align: center;
  padding: 24px 16px;
  font-size: 1.125em;
  font-family: 'museo-slab';
  font-weight: 1000;
  text-decoration: none; }

.btn--red {
  background-color: #cf0a2c; }

.video-container {
  
  
  
  width: 66.66667%;
  float: left;
  
  
  
   }

.video-wrapper {
  position: relative;
  padding-bottom: 56.25%;
  /* 16:9 */
  padding-top: 25px;
  height: 0; }
  .video-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

.sport {
  
  
  
  width: 33.33333%;
  float: right;
  
  margin-right: 0;
  
  
  background-color: #000; }

.game-content {
  padding: 16px; }

.sport__scoreboard {
  width: 100%;
  font-size: 0.875em; }
  .sport__scoreboard th, .sport__scoreboard td {
    width: 10%;
    padding: 10px;
    text-align: center; }
    .sport__scoreboard th.team-name, .sport__scoreboard td.team-name {
      width: 80%;
      text-align: left;
      padding-left: 24px; }
  .sport__scoreboard tfoot td {
    width: 100%;
    text-align: right; }
  .sport__scoreboard a {
    text-decoration: none; }
    .sport__scoreboard a:before {
      content: "> ";
      color: #cf0a2c; }

.sport__scoreboard-hockey {
  color: #fff; }

.score-total, .score-winner {
  color: #cf0a2c;
  font-weight: 500; }

.upcoming-game {
  color: #fff; }
  .upcoming-game h3 {
    line-height: 1; }
  .upcoming-game span {
    background-color: #cf0a2c;
    padding: 4px 4px 4px 24px;
    margin-right: 8px; }
  .upcoming-game p {
    padding: 24px 16px;
    text-align: center;
    font-size: 0.875em; }

.news {
  
  
  
  width: 33.33333%;
  float: left;
  
  
  
   }

.news__list {
  display: table;
  list-style: none;
  margin: 0;
  padding: 0; }

.news__list-item {
  display: table-row; }
  .news__list-item a {
    display: block;
    width: 100%;
    height: 50%; }

.news__title {
  margin: 0; }

.featured-photo {
  
  
  
  width: 66.66667%;
  float: right;
  
  margin-right: 0;
  
   }

.photo-list {
  list-style: none;
  margin: 0;
  padding: 0; }

.photo-list__item {
  float: left;
  width: 20%; }

.nav-container {
  background-color: #000;
  padding: 16px;
  font-size: 0.875rem; }
  .nav-container:after {
    content: "";
    display: table;
    clear: both; }

.nav__menu {
  list-style-type: none;
  padding: 0;
  margin: 0;
  overflow: hidden;
  float: right;
  margin-right: 30px; }
  .nav__menu > li {
    display: block;
    float: left; }
    .nav__menu > li:last-child {
      margin-right: 0; }

.nav__item {
  margin-right: 1rem;
  line-height: 2rem; }
  .nav__item a {
    display: block;
    padding: 4px 8px;
    text-decoration: none; }

.icon--brand {
  float: right; }


/*# sourceMappingURL=data:application/json;base64, */